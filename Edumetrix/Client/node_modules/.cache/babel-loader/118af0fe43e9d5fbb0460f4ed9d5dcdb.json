{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.ReactTelephoneInput = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp, _initialiseProps;\n\nvar _cramda = require('cramda');\n\nvar _cramda2 = _interopRequireDefault(_cramda);\n\nvar _reactTinyVirtualList = require('react-tiny-virtual-list');\n\nvar _reactTinyVirtualList2 = _interopRequireDefault(_reactTinyVirtualList);\n\nvar _debounce = require('debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _lodash = require('lodash.memoize');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactClickOutside = require('react-click-outside');\n\nvar _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);\n\nvar _countryTelephoneData = require('country-telephone-data');\n\nvar _countryTelephoneData2 = _interopRequireDefault(_countryTelephoneData);\n\nvar _format_number = require('./format_number');\n\nvar _format_number2 = _interopRequireDefault(_format_number);\n\nvar _replace_country_code = require('./replace_country_code');\n\nvar _replace_country_code2 = _interopRequireDefault(_replace_country_code);\n\nvar _number_validator = require('./number_validator');\n\nvar _number_validator2 = _interopRequireDefault(_number_validator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar find = _cramda2.default.find,\n    propEq = _cramda2.default.propEq,\n    equals = _cramda2.default.equals,\n    findIndex = _cramda2.default.findIndex,\n    startsWith = _cramda2.default.startsWith;\nvar allCountries = _countryTelephoneData2.default.allCountries,\n    iso2Lookup = _countryTelephoneData2.default.iso2Lookup,\n    allCountryCodes = _countryTelephoneData2.default.allCountryCodes;\nvar isModernBrowser = true;\n\nif (typeof document !== 'undefined') {\n  isModernBrowser = Boolean(document.createElement('input').setSelectionRange);\n} else {\n  isModernBrowser = true;\n}\n\nvar keys = {\n  UP: 38,\n  DOWN: 40,\n  RIGHT: 39,\n  LEFT: 37,\n  ENTER: 13,\n  ESC: 27,\n  PLUS: 43,\n  A: 65,\n  Z: 90,\n  SPACE: 32\n};\n\nfunction getDropdownListWidth() {\n  var defaultWidth = 400;\n  var horizontalMargin = 20;\n\n  if (window.innerWidth - horizontalMargin < defaultWidth) {\n    return window.innerWidth - horizontalMargin;\n  } else {\n    return defaultWidth;\n  }\n}\n\nvar ReactTelephoneInput = exports.ReactTelephoneInput = (_temp = _class = function (_Component) {\n  _inherits(ReactTelephoneInput, _Component);\n\n  function ReactTelephoneInput(props) {\n    _classCallCheck(this, ReactTelephoneInput);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var preferredCountries = props.preferredCountries.map(function (iso2) {\n      return Object.prototype.hasOwnProperty.call(iso2Lookup, iso2) ? allCountries[iso2Lookup[iso2]] : null;\n    }).filter(function (val) {\n      return val !== null;\n    });\n    _this.state = _extends({\n      preferredCountries: preferredCountries,\n      showDropDown: false,\n      queryString: '',\n      freezeSelection: false,\n      debouncedQueryStingSearcher: (0, _debounce2.default)(_this.searchCountry, 600)\n    }, _this._mapPropsToState(props, true));\n    return _this;\n  }\n\n  ReactTelephoneInput.prototype.componentDidMount = function componentDidMount() {\n    this._cursorToEnd(true);\n  };\n\n  ReactTelephoneInput.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    return !equals(nextProps, this.props) || !equals(nextState, this.state);\n  };\n\n  ReactTelephoneInput.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setState(this._mapPropsToState(nextProps));\n  }; // put the cursor to the end of the input (usually after a focus event)\n  // memoize results based on the first 5/6 characters. That is all that matters\n  // memoize search results... caching all the way\n\n\n  ReactTelephoneInput.prototype.render = function render() {\n    var _this2 = this;\n\n    var arrowClasses = (0, _classnames2.default)({\n      arrow: true,\n      up: this.state.showDropDown\n    });\n    var inputClasses = (0, _classnames2.default)({\n      'form-control': true,\n      'invalid-number': !this.props.isValid(this.state.formattedNumber.replace(/\\D/g, ''))\n    });\n    var flagViewClasses = (0, _classnames2.default)({\n      'flag-dropdown': true,\n      'open-dropdown': this.state.showDropDown\n    });\n    var inputFlagClasses = 'flag ' + this.state.selectedCountry.iso2;\n    var buttonProps = this.props.buttonProps;\n    var otherProps = this.props.inputProps;\n\n    if (this.props.inputId) {\n      otherProps.id = this.props.inputId;\n    }\n\n    return _react2.default.createElement('div', {\n      className: (0, _classnames2.default)('react-tel-input', this.props.classNames, this.props.className),\n      'data-test-id': 'src_reacttelephoneinput_test_id_4'\n    }, _react2.default.createElement('div', {\n      className: flagViewClasses,\n      onKeyDown: this.handleKeydown,\n      'data-test-id': 'src_reacttelephoneinput_test_id_6'\n    }, _react2.default.createElement('button', _extends({\n      onClick: this.handleFlagDropdownClick,\n      className: 'selected-flag',\n      title: this.state.selectedCountry.name + ': + ' + this.state.selectedCountry.dialCode,\n      'data-test-id': 'src_reacttelephoneinput_test_id_7',\n      onKeyDown: this.handleFlagKeyDown,\n      type: 'button'\n    }, buttonProps), _react2.default.createElement('div', {\n      className: inputFlagClasses,\n      style: this.getFlagStyle(),\n      'data-test-id': 'src_reacttelephoneinput_test_id_8'\n    }, _react2.default.createElement('div', {\n      className: arrowClasses,\n      'data-test-id': 'src_reacttelephoneinput_test_id_9'\n    }))), this.state.showDropDown ? this.getCountryDropDownList() : ''), _react2.default.createElement('input', _extends({\n      onChange: this.handleInput,\n      onClick: this.handleInputClick,\n      onFocus: this.handleInputFocus,\n      onBlur: this.handleInputBlur,\n      onKeyDown: this.handleInputKeyDown,\n      value: this.state.formattedNumber,\n      ref: function ref(node) {\n        _this2.numberInputRef = node;\n      },\n      type: 'tel',\n      className: inputClasses,\n      autoComplete: this.props.autoComplete,\n      pattern: this.props.pattern,\n      required: this.props.required,\n      placeholder: this.props.placeholder,\n      disabled: this.props.disabled\n    }, otherProps, {\n      'data-test-id': 'src_reacttelephoneinput_test_id_5'\n    })));\n  };\n\n  return ReactTelephoneInput;\n}(_react.Component), _class.defaultProps = {\n  autoFormat: true,\n  onlyCountries: allCountries,\n  defaultCountry: allCountries[0].iso2,\n  isValid: _number_validator2.default,\n  flagsImagePath: 'flags.png',\n  onEnterKeyPress: function onEnterKeyPress() {},\n  preferredCountries: [],\n  disabled: false,\n  placeholder: '+1 (702) 123-4567',\n  autoComplete: 'tel',\n  required: false,\n  inputProps: {},\n  buttonProps: {},\n  listItemClassName: 'country',\n  listStyle: {\n    zIndex: 20,\n    backgroundColor: 'white'\n  }\n}, _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.numberInputRef = null;\n\n  this._cursorToEnd = function (skipFocus) {\n    var input = _this3.numberInputRef;\n\n    if (skipFocus) {\n      _this3._fillDialCode();\n    } else {\n      input.focus();\n\n      if (isModernBrowser) {\n        var len = input.value.length;\n        input.setSelectionRange(len, len);\n      }\n    }\n  };\n\n  this.guessSelectedCountry = function (inputNumber) {\n    var _props = _this3.props,\n        defaultCountry = _props.defaultCountry,\n        onlyCountries = _props.onlyCountries;\n\n    var secondBestGuess = find(propEq('iso2', defaultCountry), allCountries) || _this3.props.onlyCountries[0];\n\n    var inputNumberForCountries = inputNumber.substr(0, 4);\n    var bestGuess = void 0;\n\n    if (inputNumber.trim() !== '') {\n      bestGuess = onlyCountries.reduce(function (selectedCountry, country) {\n        // if the country dialCode exists WITH area code\n        if (allCountryCodes[inputNumberForCountries] && allCountryCodes[inputNumberForCountries][0] === country.iso2) {\n          return country; // if the selected country dialCode is there with the area code\n        } else if (allCountryCodes[inputNumberForCountries] && allCountryCodes[inputNumberForCountries][0] === selectedCountry.iso2) {\n          return selectedCountry; // else do the original if statement\n        }\n\n        if (startsWith(country.dialCode, inputNumber)) {\n          if (country.dialCode.length > selectedCountry.dialCode.length) {\n            return country;\n          }\n\n          if (country.dialCode.length === selectedCountry.dialCode.length && country.priority < selectedCountry.priority) {\n            return country;\n          }\n        }\n\n        return selectedCountry;\n      }, {\n        dialCode: '',\n        priority: 10001\n      }, _this3);\n    } else {\n      return secondBestGuess;\n    }\n\n    if (!bestGuess || !bestGuess.name) {\n      return secondBestGuess;\n    }\n\n    return bestGuess;\n  };\n\n  this.handleFlagDropdownClick = function (e) {\n    if (_this3.props.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n    var _state = _this3.state,\n        preferredCountries = _state.preferredCountries,\n        selectedCountry = _state.selectedCountry;\n    var onlyCountries = _this3.props.onlyCountries; // need to put the highlight on the current selected country if the dropdown is going to open up\n\n    _this3.setState({\n      showDropDown: !_this3.state.showDropDown,\n      highlightCountry: find(equals(_this3.state.selectedCountry), _this3.props.onlyCountries),\n      highlightCountryIndex: findIndex(propEq('iso2', selectedCountry.iso2), preferredCountries.concat(onlyCountries))\n    });\n  };\n\n  this.handleInput = function (event) {\n    var formattedNumber = '+';\n    var newSelectedCountry = _this3.state.selectedCountry;\n    var freezeSelection = _this3.state.freezeSelection; // if the input is the same as before, must be some special key like enter, alt, command etc.\n\n    if (event.target.value === _this3.state.formattedNumber) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      // ie hack\n      event.returnValue = false; // eslint-disable-line no-param-reassign\n    }\n\n    if (event.target.value && event.target.value.length > 0) {\n      // before entering the number in new format,\n      // lets check if the dial code now matches some other country\n      // replace all non-numeric characters from the input string\n      var inputNumber = event.target.value.replace(/\\D/g, ''); // we don't need to send the whole number to guess the country...\n      // only the first 6 characters are enough\n      // the guess country function can then use memoization much more effectively\n      // since the set of input it gets has drastically reduced\n\n      if (!_this3.state.freezeSelection || _this3.state.selectedCountry.dialCode.length > inputNumber.length) {\n        newSelectedCountry = _this3.guessSelectedCountry(inputNumber.substring(0, 6));\n        freezeSelection = false;\n      }\n\n      formattedNumber = (0, _format_number2.default)(inputNumber, newSelectedCountry.format, _this3.props.autoFormat);\n    }\n\n    var caretPosition = event.target.selectionStart;\n    var oldFormattedText = _this3.state.formattedNumber;\n    var diff = formattedNumber.length - oldFormattedText.length;\n    var selectedCountry = newSelectedCountry.dialCode.length > 0 ? newSelectedCountry : _this3.state.selectedCountry;\n\n    _this3.setState({\n      formattedNumber: formattedNumber,\n      freezeSelection: freezeSelection,\n      selectedCountry: selectedCountry\n    }, function () {\n      if (isModernBrowser) {\n        if (caretPosition === 1 && formattedNumber.length === 2) {\n          caretPosition += 1;\n        }\n\n        if (diff > 0) {\n          caretPosition -= diff;\n        }\n\n        if (caretPosition > 0 && oldFormattedText.length >= formattedNumber.length) {\n          if (_this3.numberInputRef) {\n            _this3.numberInputRef.setSelectionRange(caretPosition, caretPosition);\n          }\n        }\n      }\n\n      if (_this3.props.onChange) {\n        _this3.props.onChange(formattedNumber, selectedCountry);\n      }\n    });\n  };\n\n  this.handleInputClick = function () {\n    _this3.setState({\n      showDropDown: false\n    });\n  };\n\n  this.handleFlagItemClick = function (country) {\n    var currentSelectedCountry = _this3.state.selectedCountry;\n    var nextSelectedCountry = find(equals(country), _this3.props.onlyCountries); // tiny optimization\n\n    if (currentSelectedCountry.iso2 !== nextSelectedCountry.iso2) {\n      var newNumber = (0, _replace_country_code2.default)(currentSelectedCountry, nextSelectedCountry, _this3.state.formattedNumber.replace(/\\D/g, '') // let's convert formatted number to just numbers for easy find/replace\n      );\n      var formattedNumber = (0, _format_number2.default)(newNumber, nextSelectedCountry.format, _this3.props.autoFormat);\n\n      _this3.setState({\n        showDropDown: false,\n        selectedCountry: nextSelectedCountry,\n        freezeSelection: true,\n        formattedNumber: formattedNumber\n      }, function () {\n        _this3._cursorToEnd();\n\n        if (_this3.props.onChange) {\n          _this3.props.onChange(formattedNumber, nextSelectedCountry);\n        }\n      });\n    } else {\n      _this3.setState({\n        showDropDown: false\n      });\n    }\n  };\n\n  this.handleInputFocus = function () {\n    // trigger parent component's onFocus handler\n    if (typeof _this3.props.onFocus === 'function') {\n      _this3.props.onFocus(_this3.state.formattedNumber, _this3.state.selectedCountry);\n    }\n\n    _this3._fillDialCode();\n  };\n\n  this._mapPropsToState = function (props) {\n    var firstCall = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var inputNumber = void 0;\n\n    if (props.value) {\n      inputNumber = props.value;\n    } else if (props.initialValue && firstCall) {\n      inputNumber = props.initialValue;\n    } else if (_this3.props.value) {\n      // just clear the value\n      inputNumber = '';\n    } else if (_this3.state && _this3.state.formattedNumber && _this3.state.formattedNumber.length > 0) {\n      inputNumber = _this3.state.formattedNumber;\n    } else {\n      inputNumber = '';\n    }\n\n    var selectedCountryGuess = _this3.guessSelectedCountry(inputNumber.replace(/\\D/g, ''));\n\n    var selectedCountryGuessIndex = findIndex(propEq('iso2', selectedCountryGuess.iso2), allCountries);\n    var formattedNumber = (0, _format_number2.default)(inputNumber.replace(/\\D/g, ''), selectedCountryGuess ? selectedCountryGuess.format : null, _this3.props.autoFormat);\n    return {\n      selectedCountry: selectedCountryGuess,\n      highlightCountryIndex: selectedCountryGuessIndex,\n      formattedNumber: formattedNumber\n    };\n  };\n\n  this._fillDialCode = function () {\n    // if the input is blank, insert dial code of the selected country\n    if (_this3.numberInputRef && _this3.numberInputRef.value === '+') {\n      _this3.setState({\n        formattedNumber: '+' + _this3.state.selectedCountry.dialCode\n      });\n    }\n  };\n\n  this._getHighlightCountryIndex = function (direction) {\n    // had to write own function because underscore does not have findIndex. lodash has it\n    var highlightCountryIndex = _this3.state.highlightCountryIndex + direction;\n\n    if (highlightCountryIndex < 0 || highlightCountryIndex >= _this3.props.onlyCountries.length + _this3.state.preferredCountries.length) {\n      return highlightCountryIndex - direction;\n    }\n\n    return highlightCountryIndex;\n  };\n\n  this._searchCountry = (0, _lodash2.default)(function searchCountry(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return null;\n    } // don't include the preferred countries in search\n\n\n    var probableCountries = this.props.onlyCountries.filter(function (country) {\n      return startsWith(queryString.toLowerCase(), country.name.toLowerCase());\n    }, this);\n    return probableCountries[0];\n  });\n\n  this.searchCountry = function () {\n    var probableCandidate = _this3._searchCountry(_this3.state.queryString) || _this3.props.onlyCountries[0];\n\n    var probableCandidateIndex = findIndex(propEq('iso2', probableCandidate.iso2), _this3.props.onlyCountries) + _this3.state.preferredCountries.length;\n\n    _this3.setState({\n      queryString: '',\n      highlightCountryIndex: probableCandidateIndex\n    });\n  };\n\n  this.handleKeydown = function (event) {\n    if (!_this3.state.showDropDown || event.metaKey || event.altKey) {\n      return;\n    } // ie hack\n\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false; // eslint-disable-line no-param-reassign\n    }\n\n    var self = _this3;\n\n    function _moveHighlight(direction) {\n      self.setState({\n        highlightCountryIndex: self._getHighlightCountryIndex(direction)\n      });\n    }\n\n    switch (event.which) {\n      case keys.DOWN:\n        _moveHighlight(1);\n\n        break;\n\n      case keys.UP:\n        _moveHighlight(-1);\n\n        break;\n\n      case keys.ENTER:\n        _this3.handleFlagItemClick(_this3.state.preferredCountries.concat(_this3.props.onlyCountries)[_this3.state.highlightCountryIndex], event);\n\n        break;\n\n      case keys.ESC:\n        _this3.setState({\n          showDropDown: false\n        }, _this3._cursorToEnd);\n\n        break;\n\n      default:\n        if (event.which >= keys.A && event.which <= keys.Z || event.which === keys.SPACE) {\n          _this3.setState({\n            queryString: _this3.state.queryString + String.fromCharCode(event.which)\n          }, _this3.state.debouncedQueryStingSearcher);\n        }\n\n    }\n  };\n\n  this.handleInputKeyDown = function (event) {\n    if (event.which === keys.ENTER) {\n      typeof _this3.props.onEnterKeyPress === 'function' && _this3.props.onEnterKeyPress(event);\n    }\n  };\n\n  this.handleClickOutside = function () {\n    if (_this3.state.showDropDown) {\n      _this3.setState({\n        showDropDown: false\n      });\n    }\n  };\n\n  this.getCountryDropDownList = function () {\n    var data = _this3.state.preferredCountries.concat(_this3.props.onlyCountries);\n\n    return _react2.default.createElement(_reactTinyVirtualList2.default, {\n      width: getDropdownListWidth(),\n      height: 300,\n      itemCount: data.length,\n      itemSize: 40,\n      style: _this3.props.listStyle,\n      className: 'country-list',\n      scrollToIndex: _this3.state.highlightCountryIndex,\n      scrollToAlignment: 'center',\n      renderItem: function renderItem(_ref) {\n        var index = _ref.index,\n            style = _ref.style;\n        var country = data[index];\n        var itemClasses = (0, _classnames2.default)(_this3.props.listItemClassName, {\n          preferred: findIndex(propEq('iso2', country.iso2), _this3.state.preferredCountries) >= 0,\n          highlight: _this3.state.highlightCountryIndex === index\n        });\n        var inputFlagClasses = 'flag ' + country.iso2;\n        return _react2.default.createElement('div', {\n          key: 'flag_no_' + index,\n          'data-flag-key': 'flag_no_' + index,\n          className: itemClasses,\n          'data-dial-code': country.dialCode,\n          'data-country-code': country.iso2,\n          onClick: _this3.handleFlagItemClick.bind(_this3, country),\n          style: style,\n          title: country.name + ' - ' + country.dialCode,\n          'data-test-id': 'src_reacttelephoneinput_test_id_0'\n        }, _react2.default.createElement('div', {\n          className: inputFlagClasses,\n          style: _this3.getFlagStyle(),\n          'data-test-id': 'src_reacttelephoneinput_test_id_1'\n        }), _react2.default.createElement('span', {\n          className: 'country-name',\n          'data-test-id': 'src_reacttelephoneinput_test_id_2'\n        }, country.name), _react2.default.createElement('span', {\n          className: 'dial-code',\n          'data-test-id': 'src_reacttelephoneinput_test_id_3'\n        }, '+' + country.dialCode));\n      }\n    });\n  };\n\n  this.getFlagStyle = function () {\n    if (_this3.props.flagsImagePath) {\n      return {\n        backgroundImage: 'url(' + _this3.props.flagsImagePath + ')'\n      };\n    }\n\n    return {};\n  };\n\n  this.handleInputBlur = function () {\n    if (typeof _this3.props.onBlur === 'function') {\n      _this3.props.onBlur(_this3.state.formattedNumber, _this3.state.selectedCountry);\n    }\n  };\n\n  this.handleFlagKeyDown = function (event) {\n    // only trigger dropdown click if the dropdown is not already open.\n    // it will otherwise interfere with key up/down of list\n    if (event.which === keys.DOWN && _this3.state.showDropDown === false) {\n      _this3.handleFlagDropdownClick(event);\n    }\n  };\n}, _temp);\nReactTelephoneInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  value: _propTypes2.default.string,\n  initialValue: _propTypes2.default.string,\n  autoFormat: _propTypes2.default.bool,\n  defaultCountry: _propTypes2.default.string,\n  isValid: _propTypes2.default.func,\n  onlyCountries: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  preferredCountries: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  flagsImagePath: _propTypes2.default.string,\n  placeholder: _propTypes2.default.string,\n  autoComplete: _propTypes2.default.string,\n  classNames: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  inputId: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  onEnterKeyPress: _propTypes2.default.func,\n  onBlur: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  disabled: _propTypes2.default.bool,\n  pattern: _propTypes2.default.string,\n  required: _propTypes2.default.bool,\n  inputProps: _propTypes2.default.object,\n  buttonProps: _propTypes2.default.object,\n  listStyle: _propTypes2.default.object,\n  listItemClassName: _propTypes2.default.string\n} : {};\nexports.default = (0, _reactClickOutside2.default)(ReactTelephoneInput);","map":{"version":3,"sources":["/home/edumetrix/Desktop/Edumetrix2/Edumetrix/Client/node_modules/react-telephone-input/lib/ReactTelephoneInput.js"],"names":["exports","__esModule","ReactTelephoneInput","undefined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_class","_temp","_initialiseProps","_cramda","require","_cramda2","_interopRequireDefault","_reactTinyVirtualList","_reactTinyVirtualList2","_debounce","_debounce2","_lodash","_lodash2","_react","_react2","_propTypes","_propTypes2","_classnames","_classnames2","_reactClickOutside","_reactClickOutside2","_countryTelephoneData","_countryTelephoneData2","_format_number","_format_number2","_replace_country_code","_replace_country_code2","_number_validator","_number_validator2","obj","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","find","propEq","equals","findIndex","startsWith","allCountries","iso2Lookup","allCountryCodes","isModernBrowser","document","Boolean","createElement","setSelectionRange","keys","UP","DOWN","RIGHT","LEFT","ENTER","ESC","PLUS","A","Z","SPACE","getDropdownListWidth","defaultWidth","horizontalMargin","window","innerWidth","_Component","props","_this","preferredCountries","map","iso2","filter","val","state","showDropDown","queryString","freezeSelection","debouncedQueryStingSearcher","searchCountry","_mapPropsToState","componentDidMount","_cursorToEnd","shouldComponentUpdate","nextProps","nextState","componentWillReceiveProps","setState","render","_this2","arrowClasses","arrow","up","inputClasses","isValid","formattedNumber","replace","flagViewClasses","inputFlagClasses","selectedCountry","buttonProps","otherProps","inputProps","inputId","id","className","classNames","onKeyDown","handleKeydown","onClick","handleFlagDropdownClick","title","name","dialCode","handleFlagKeyDown","type","style","getFlagStyle","getCountryDropDownList","onChange","handleInput","handleInputClick","onFocus","handleInputFocus","onBlur","handleInputBlur","handleInputKeyDown","ref","node","numberInputRef","autoComplete","pattern","required","placeholder","disabled","Component","defaultProps","autoFormat","onlyCountries","defaultCountry","flagsImagePath","onEnterKeyPress","listItemClassName","listStyle","zIndex","backgroundColor","_this3","skipFocus","input","_fillDialCode","focus","len","guessSelectedCountry","inputNumber","_props","secondBestGuess","inputNumberForCountries","substr","bestGuess","trim","reduce","country","priority","e","preventDefault","_state","highlightCountry","highlightCountryIndex","concat","event","newSelectedCountry","returnValue","substring","format","caretPosition","selectionStart","oldFormattedText","diff","handleFlagItemClick","currentSelectedCountry","nextSelectedCountry","newNumber","firstCall","initialValue","selectedCountryGuess","selectedCountryGuessIndex","_getHighlightCountryIndex","direction","_searchCountry","probableCountries","toLowerCase","probableCandidate","probableCandidateIndex","metaKey","altKey","_moveHighlight","which","String","fromCharCode","handleClickOutside","data","width","height","itemCount","itemSize","scrollToIndex","scrollToAlignment","renderItem","_ref","index","itemClasses","preferred","highlight","bind","backgroundImage","propTypes","process","env","NODE_ENV","string","bool","func","arrayOf","object"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.ReactTelephoneInput = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _class, _temp, _initialiseProps;\n\nvar _cramda = require('cramda');\n\nvar _cramda2 = _interopRequireDefault(_cramda);\n\nvar _reactTinyVirtualList = require('react-tiny-virtual-list');\n\nvar _reactTinyVirtualList2 = _interopRequireDefault(_reactTinyVirtualList);\n\nvar _debounce = require('debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _lodash = require('lodash.memoize');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactClickOutside = require('react-click-outside');\n\nvar _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);\n\nvar _countryTelephoneData = require('country-telephone-data');\n\nvar _countryTelephoneData2 = _interopRequireDefault(_countryTelephoneData);\n\nvar _format_number = require('./format_number');\n\nvar _format_number2 = _interopRequireDefault(_format_number);\n\nvar _replace_country_code = require('./replace_country_code');\n\nvar _replace_country_code2 = _interopRequireDefault(_replace_country_code);\n\nvar _number_validator = require('./number_validator');\n\nvar _number_validator2 = _interopRequireDefault(_number_validator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar find = _cramda2.default.find,\n    propEq = _cramda2.default.propEq,\n    equals = _cramda2.default.equals,\n    findIndex = _cramda2.default.findIndex,\n    startsWith = _cramda2.default.startsWith;\nvar allCountries = _countryTelephoneData2.default.allCountries,\n    iso2Lookup = _countryTelephoneData2.default.iso2Lookup,\n    allCountryCodes = _countryTelephoneData2.default.allCountryCodes;\n\nvar isModernBrowser = true;\n\nif (typeof document !== 'undefined') {\n  isModernBrowser = Boolean(document.createElement('input').setSelectionRange);\n} else {\n  isModernBrowser = true;\n}\n\nvar keys = {\n  UP: 38,\n  DOWN: 40,\n  RIGHT: 39,\n  LEFT: 37,\n  ENTER: 13,\n  ESC: 27,\n  PLUS: 43,\n  A: 65,\n  Z: 90,\n  SPACE: 32\n};\n\nfunction getDropdownListWidth() {\n  var defaultWidth = 400;\n  var horizontalMargin = 20;\n\n  if (window.innerWidth - horizontalMargin < defaultWidth) {\n    return window.innerWidth - horizontalMargin;\n  } else {\n    return defaultWidth;\n  }\n}\n\nvar ReactTelephoneInput = exports.ReactTelephoneInput = (_temp = _class = function (_Component) {\n  _inherits(ReactTelephoneInput, _Component);\n\n  function ReactTelephoneInput(props) {\n    _classCallCheck(this, ReactTelephoneInput);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var preferredCountries = props.preferredCountries.map(function (iso2) {\n      return Object.prototype.hasOwnProperty.call(iso2Lookup, iso2) ? allCountries[iso2Lookup[iso2]] : null;\n    }).filter(function (val) {\n      return val !== null;\n    });\n\n    _this.state = _extends({\n      preferredCountries: preferredCountries,\n      showDropDown: false,\n      queryString: '',\n      freezeSelection: false,\n      debouncedQueryStingSearcher: (0, _debounce2.default)(_this.searchCountry, 600)\n    }, _this._mapPropsToState(props, true));\n    return _this;\n  }\n\n  ReactTelephoneInput.prototype.componentDidMount = function componentDidMount() {\n    this._cursorToEnd(true);\n  };\n\n  ReactTelephoneInput.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    return !equals(nextProps, this.props) || !equals(nextState, this.state);\n  };\n\n  ReactTelephoneInput.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setState(this._mapPropsToState(nextProps));\n  };\n\n  // put the cursor to the end of the input (usually after a focus event)\n\n\n  // memoize results based on the first 5/6 characters. That is all that matters\n\n\n  // memoize search results... caching all the way\n\n\n  ReactTelephoneInput.prototype.render = function render() {\n    var _this2 = this;\n\n    var arrowClasses = (0, _classnames2.default)({\n      arrow: true,\n      up: this.state.showDropDown\n    });\n    var inputClasses = (0, _classnames2.default)({\n      'form-control': true,\n      'invalid-number': !this.props.isValid(this.state.formattedNumber.replace(/\\D/g, ''))\n    });\n\n    var flagViewClasses = (0, _classnames2.default)({\n      'flag-dropdown': true,\n      'open-dropdown': this.state.showDropDown\n    });\n\n    var inputFlagClasses = 'flag ' + this.state.selectedCountry.iso2;\n    var buttonProps = this.props.buttonProps;\n    var otherProps = this.props.inputProps;\n    if (this.props.inputId) {\n      otherProps.id = this.props.inputId;\n    }\n\n    return _react2.default.createElement(\n      'div',\n      {\n        className: (0, _classnames2.default)('react-tel-input', this.props.classNames, this.props.className),\n        'data-test-id': 'src_reacttelephoneinput_test_id_4'\n      },\n      _react2.default.createElement(\n        'div',\n        {\n          className: flagViewClasses,\n          onKeyDown: this.handleKeydown,\n          'data-test-id': 'src_reacttelephoneinput_test_id_6'\n        },\n        _react2.default.createElement(\n          'button',\n          _extends({\n            onClick: this.handleFlagDropdownClick,\n            className: 'selected-flag',\n            title: this.state.selectedCountry.name + ': + ' + this.state.selectedCountry.dialCode,\n            'data-test-id': 'src_reacttelephoneinput_test_id_7',\n            onKeyDown: this.handleFlagKeyDown,\n            type: 'button'\n          }, buttonProps),\n          _react2.default.createElement(\n            'div',\n            {\n              className: inputFlagClasses,\n              style: this.getFlagStyle(),\n              'data-test-id': 'src_reacttelephoneinput_test_id_8'\n            },\n            _react2.default.createElement('div', { className: arrowClasses, 'data-test-id': 'src_reacttelephoneinput_test_id_9' })\n          )\n        ),\n        this.state.showDropDown ? this.getCountryDropDownList() : ''\n      ),\n      _react2.default.createElement('input', _extends({\n        onChange: this.handleInput,\n        onClick: this.handleInputClick,\n        onFocus: this.handleInputFocus,\n        onBlur: this.handleInputBlur,\n        onKeyDown: this.handleInputKeyDown,\n        value: this.state.formattedNumber,\n        ref: function ref(node) {\n          _this2.numberInputRef = node;\n        },\n        type: 'tel',\n        className: inputClasses,\n        autoComplete: this.props.autoComplete,\n        pattern: this.props.pattern,\n        required: this.props.required,\n        placeholder: this.props.placeholder,\n        disabled: this.props.disabled\n      }, otherProps, {\n        'data-test-id': 'src_reacttelephoneinput_test_id_5'\n      }))\n    );\n  };\n\n  return ReactTelephoneInput;\n}(_react.Component), _class.defaultProps = {\n  autoFormat: true,\n  onlyCountries: allCountries,\n  defaultCountry: allCountries[0].iso2,\n  isValid: _number_validator2.default,\n  flagsImagePath: 'flags.png',\n  onEnterKeyPress: function onEnterKeyPress() {},\n\n  preferredCountries: [],\n  disabled: false,\n  placeholder: '+1 (702) 123-4567',\n  autoComplete: 'tel',\n  required: false,\n  inputProps: {},\n  buttonProps: {},\n  listItemClassName: 'country',\n  listStyle: {\n    zIndex: 20,\n    backgroundColor: 'white'\n  }\n}, _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.numberInputRef = null;\n\n  this._cursorToEnd = function (skipFocus) {\n    var input = _this3.numberInputRef;\n    if (skipFocus) {\n      _this3._fillDialCode();\n    } else {\n      input.focus();\n\n      if (isModernBrowser) {\n        var len = input.value.length;\n        input.setSelectionRange(len, len);\n      }\n    }\n  };\n\n  this.guessSelectedCountry = function (inputNumber) {\n    var _props = _this3.props,\n        defaultCountry = _props.defaultCountry,\n        onlyCountries = _props.onlyCountries;\n\n\n    var secondBestGuess = find(propEq('iso2', defaultCountry), allCountries) || _this3.props.onlyCountries[0];\n\n    var inputNumberForCountries = inputNumber.substr(0, 4);\n    var bestGuess = void 0;\n\n    if (inputNumber.trim() !== '') {\n      bestGuess = onlyCountries.reduce(function (selectedCountry, country) {\n        // if the country dialCode exists WITH area code\n\n        if (allCountryCodes[inputNumberForCountries] && allCountryCodes[inputNumberForCountries][0] === country.iso2) {\n          return country;\n\n          // if the selected country dialCode is there with the area code\n        } else if (allCountryCodes[inputNumberForCountries] && allCountryCodes[inputNumberForCountries][0] === selectedCountry.iso2) {\n          return selectedCountry;\n\n          // else do the original if statement\n        }\n        if (startsWith(country.dialCode, inputNumber)) {\n          if (country.dialCode.length > selectedCountry.dialCode.length) {\n            return country;\n          }\n          if (country.dialCode.length === selectedCountry.dialCode.length && country.priority < selectedCountry.priority) {\n            return country;\n          }\n        }\n\n        return selectedCountry;\n      }, { dialCode: '', priority: 10001 }, _this3);\n    } else {\n      return secondBestGuess;\n    }\n\n    if (!bestGuess || !bestGuess.name) {\n      return secondBestGuess;\n    }\n\n    return bestGuess;\n  };\n\n  this.handleFlagDropdownClick = function (e) {\n    if (_this3.props.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n    var _state = _this3.state,\n        preferredCountries = _state.preferredCountries,\n        selectedCountry = _state.selectedCountry;\n    var onlyCountries = _this3.props.onlyCountries;\n\n    // need to put the highlight on the current selected country if the dropdown is going to open up\n\n    _this3.setState({\n      showDropDown: !_this3.state.showDropDown,\n      highlightCountry: find(equals(_this3.state.selectedCountry), _this3.props.onlyCountries),\n      highlightCountryIndex: findIndex(propEq('iso2', selectedCountry.iso2), preferredCountries.concat(onlyCountries))\n    });\n  };\n\n  this.handleInput = function (event) {\n    var formattedNumber = '+';\n    var newSelectedCountry = _this3.state.selectedCountry;\n    var freezeSelection = _this3.state.freezeSelection;\n\n    // if the input is the same as before, must be some special key like enter, alt, command etc.\n\n    if (event.target.value === _this3.state.formattedNumber) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      // ie hack\n      event.returnValue = false; // eslint-disable-line no-param-reassign\n    }\n\n    if (event.target.value && event.target.value.length > 0) {\n      // before entering the number in new format,\n      // lets check if the dial code now matches some other country\n      // replace all non-numeric characters from the input string\n      var inputNumber = event.target.value.replace(/\\D/g, '');\n\n      // we don't need to send the whole number to guess the country...\n      // only the first 6 characters are enough\n      // the guess country function can then use memoization much more effectively\n      // since the set of input it gets has drastically reduced\n      if (!_this3.state.freezeSelection || _this3.state.selectedCountry.dialCode.length > inputNumber.length) {\n        newSelectedCountry = _this3.guessSelectedCountry(inputNumber.substring(0, 6));\n        freezeSelection = false;\n      }\n      formattedNumber = (0, _format_number2.default)(inputNumber, newSelectedCountry.format, _this3.props.autoFormat);\n    }\n\n    var caretPosition = event.target.selectionStart;\n    var oldFormattedText = _this3.state.formattedNumber;\n    var diff = formattedNumber.length - oldFormattedText.length;\n    var selectedCountry = newSelectedCountry.dialCode.length > 0 ? newSelectedCountry : _this3.state.selectedCountry;\n\n    _this3.setState({\n      formattedNumber: formattedNumber,\n      freezeSelection: freezeSelection,\n      selectedCountry: selectedCountry\n    }, function () {\n      if (isModernBrowser) {\n        if (caretPosition === 1 && formattedNumber.length === 2) {\n          caretPosition += 1;\n        }\n\n        if (diff > 0) {\n          caretPosition -= diff;\n        }\n\n        if (caretPosition > 0 && oldFormattedText.length >= formattedNumber.length) {\n          if (_this3.numberInputRef) {\n            _this3.numberInputRef.setSelectionRange(caretPosition, caretPosition);\n          }\n        }\n      }\n\n      if (_this3.props.onChange) {\n        _this3.props.onChange(formattedNumber, selectedCountry);\n      }\n    });\n  };\n\n  this.handleInputClick = function () {\n    _this3.setState({ showDropDown: false });\n  };\n\n  this.handleFlagItemClick = function (country) {\n    var currentSelectedCountry = _this3.state.selectedCountry;\n    var nextSelectedCountry = find(equals(country), _this3.props.onlyCountries);\n\n    // tiny optimization\n    if (currentSelectedCountry.iso2 !== nextSelectedCountry.iso2) {\n      var newNumber = (0, _replace_country_code2.default)(currentSelectedCountry, nextSelectedCountry, _this3.state.formattedNumber.replace(/\\D/g, '') // let's convert formatted number to just numbers for easy find/replace\n      );\n\n      var formattedNumber = (0, _format_number2.default)(newNumber, nextSelectedCountry.format, _this3.props.autoFormat);\n\n      _this3.setState({\n        showDropDown: false,\n        selectedCountry: nextSelectedCountry,\n        freezeSelection: true,\n        formattedNumber: formattedNumber\n      }, function () {\n        _this3._cursorToEnd();\n        if (_this3.props.onChange) {\n          _this3.props.onChange(formattedNumber, nextSelectedCountry);\n        }\n      });\n    } else {\n      _this3.setState({ showDropDown: false });\n    }\n  };\n\n  this.handleInputFocus = function () {\n    // trigger parent component's onFocus handler\n    if (typeof _this3.props.onFocus === 'function') {\n      _this3.props.onFocus(_this3.state.formattedNumber, _this3.state.selectedCountry);\n    }\n\n    _this3._fillDialCode();\n  };\n\n  this._mapPropsToState = function (props) {\n    var firstCall = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var inputNumber = void 0;\n\n    if (props.value) {\n      inputNumber = props.value;\n    } else if (props.initialValue && firstCall) {\n      inputNumber = props.initialValue;\n    } else if (_this3.props.value) {\n      // just clear the value\n      inputNumber = '';\n    } else if (_this3.state && _this3.state.formattedNumber && _this3.state.formattedNumber.length > 0) {\n      inputNumber = _this3.state.formattedNumber;\n    } else {\n      inputNumber = '';\n    }\n\n    var selectedCountryGuess = _this3.guessSelectedCountry(inputNumber.replace(/\\D/g, ''));\n    var selectedCountryGuessIndex = findIndex(propEq('iso2', selectedCountryGuess.iso2), allCountries);\n    var formattedNumber = (0, _format_number2.default)(inputNumber.replace(/\\D/g, ''), selectedCountryGuess ? selectedCountryGuess.format : null, _this3.props.autoFormat);\n\n    return {\n      selectedCountry: selectedCountryGuess,\n      highlightCountryIndex: selectedCountryGuessIndex,\n      formattedNumber: formattedNumber\n    };\n  };\n\n  this._fillDialCode = function () {\n    // if the input is blank, insert dial code of the selected country\n    if (_this3.numberInputRef && _this3.numberInputRef.value === '+') {\n      _this3.setState({\n        formattedNumber: '+' + _this3.state.selectedCountry.dialCode\n      });\n    }\n  };\n\n  this._getHighlightCountryIndex = function (direction) {\n    // had to write own function because underscore does not have findIndex. lodash has it\n    var highlightCountryIndex = _this3.state.highlightCountryIndex + direction;\n\n    if (highlightCountryIndex < 0 || highlightCountryIndex >= _this3.props.onlyCountries.length + _this3.state.preferredCountries.length) {\n      return highlightCountryIndex - direction;\n    }\n\n    return highlightCountryIndex;\n  };\n\n  this._searchCountry = (0, _lodash2.default)(function searchCountry(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return null;\n    }\n    // don't include the preferred countries in search\n    var probableCountries = this.props.onlyCountries.filter(function (country) {\n      return startsWith(queryString.toLowerCase(), country.name.toLowerCase());\n    }, this);\n    return probableCountries[0];\n  });\n\n  this.searchCountry = function () {\n    var probableCandidate = _this3._searchCountry(_this3.state.queryString) || _this3.props.onlyCountries[0];\n    var probableCandidateIndex = findIndex(propEq('iso2', probableCandidate.iso2), _this3.props.onlyCountries) + _this3.state.preferredCountries.length;\n\n    _this3.setState({\n      queryString: '',\n      highlightCountryIndex: probableCandidateIndex\n    });\n  };\n\n  this.handleKeydown = function (event) {\n    if (!_this3.state.showDropDown || event.metaKey || event.altKey) {\n      return;\n    }\n\n    // ie hack\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false; // eslint-disable-line no-param-reassign\n    }\n\n    var self = _this3;\n    function _moveHighlight(direction) {\n      self.setState({\n        highlightCountryIndex: self._getHighlightCountryIndex(direction)\n      });\n    }\n\n    switch (event.which) {\n      case keys.DOWN:\n        _moveHighlight(1);\n        break;\n      case keys.UP:\n        _moveHighlight(-1);\n        break;\n      case keys.ENTER:\n        _this3.handleFlagItemClick(_this3.state.preferredCountries.concat(_this3.props.onlyCountries)[_this3.state.highlightCountryIndex], event);\n        break;\n      case keys.ESC:\n        _this3.setState({ showDropDown: false }, _this3._cursorToEnd);\n        break;\n      default:\n        if (event.which >= keys.A && event.which <= keys.Z || event.which === keys.SPACE) {\n          _this3.setState({\n            queryString: _this3.state.queryString + String.fromCharCode(event.which)\n          }, _this3.state.debouncedQueryStingSearcher);\n        }\n    }\n  };\n\n  this.handleInputKeyDown = function (event) {\n    if (event.which === keys.ENTER) {\n      typeof _this3.props.onEnterKeyPress === 'function' && _this3.props.onEnterKeyPress(event);\n    }\n  };\n\n  this.handleClickOutside = function () {\n    if (_this3.state.showDropDown) {\n      _this3.setState({\n        showDropDown: false\n      });\n    }\n  };\n\n  this.getCountryDropDownList = function () {\n    var data = _this3.state.preferredCountries.concat(_this3.props.onlyCountries);\n\n    return _react2.default.createElement(_reactTinyVirtualList2.default, {\n      width: getDropdownListWidth(),\n      height: 300,\n      itemCount: data.length,\n      itemSize: 40,\n      style: _this3.props.listStyle,\n      className: 'country-list',\n      scrollToIndex: _this3.state.highlightCountryIndex,\n      scrollToAlignment: 'center',\n      renderItem: function renderItem(_ref) {\n        var index = _ref.index,\n            style = _ref.style;\n\n        var country = data[index];\n        var itemClasses = (0, _classnames2.default)(_this3.props.listItemClassName, {\n          preferred: findIndex(propEq('iso2', country.iso2), _this3.state.preferredCountries) >= 0,\n          highlight: _this3.state.highlightCountryIndex === index\n        });\n\n        var inputFlagClasses = 'flag ' + country.iso2;\n\n        return _react2.default.createElement(\n          'div',\n          {\n            key: 'flag_no_' + index,\n            'data-flag-key': 'flag_no_' + index,\n            className: itemClasses,\n            'data-dial-code': country.dialCode,\n            'data-country-code': country.iso2,\n            onClick: _this3.handleFlagItemClick.bind(_this3, country),\n            style: style,\n            title: country.name + ' - ' + country.dialCode,\n            'data-test-id': 'src_reacttelephoneinput_test_id_0'\n          },\n          _react2.default.createElement('div', {\n            className: inputFlagClasses,\n            style: _this3.getFlagStyle(),\n            'data-test-id': 'src_reacttelephoneinput_test_id_1'\n          }),\n          _react2.default.createElement(\n            'span',\n            { className: 'country-name', 'data-test-id': 'src_reacttelephoneinput_test_id_2' },\n            country.name\n          ),\n          _react2.default.createElement(\n            'span',\n            { className: 'dial-code', 'data-test-id': 'src_reacttelephoneinput_test_id_3' },\n            '+' + country.dialCode\n          )\n        );\n      }\n    });\n  };\n\n  this.getFlagStyle = function () {\n    if (_this3.props.flagsImagePath) {\n      return {\n        backgroundImage: 'url(' + _this3.props.flagsImagePath + ')'\n      };\n    }\n    return {};\n  };\n\n  this.handleInputBlur = function () {\n    if (typeof _this3.props.onBlur === 'function') {\n      _this3.props.onBlur(_this3.state.formattedNumber, _this3.state.selectedCountry);\n    }\n  };\n\n  this.handleFlagKeyDown = function (event) {\n    // only trigger dropdown click if the dropdown is not already open.\n    // it will otherwise interfere with key up/down of list\n    if (event.which === keys.DOWN && _this3.state.showDropDown === false) {\n      _this3.handleFlagDropdownClick(event);\n    }\n  };\n}, _temp);\n\n\nReactTelephoneInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  value: _propTypes2.default.string,\n  initialValue: _propTypes2.default.string,\n  autoFormat: _propTypes2.default.bool,\n  defaultCountry: _propTypes2.default.string,\n  isValid: _propTypes2.default.func,\n  onlyCountries: _propTypes2.default.arrayOf(_propTypes2.default.object),\n  preferredCountries: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  flagsImagePath: _propTypes2.default.string,\n  placeholder: _propTypes2.default.string,\n  autoComplete: _propTypes2.default.string,\n  classNames: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  inputId: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  onEnterKeyPress: _propTypes2.default.func,\n  onBlur: _propTypes2.default.func,\n  onFocus: _propTypes2.default.func,\n  disabled: _propTypes2.default.bool,\n  pattern: _propTypes2.default.string,\n  required: _propTypes2.default.bool,\n  inputProps: _propTypes2.default.object,\n  buttonProps: _propTypes2.default.object,\n  listStyle: _propTypes2.default.object,\n  listItemClassName: _propTypes2.default.string\n} : {};\n\nexports.default = (0, _reactClickOutside2.default)(ReactTelephoneInput);"]},"metadata":{},"sourceType":"script"}