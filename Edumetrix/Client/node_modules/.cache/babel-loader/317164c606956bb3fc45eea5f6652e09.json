{"ast":null,"code":"var _jsxFileName = \"/home/kapil/Desktop/Edumetrix/edumetrix/src/Components/ImageUploader.jsx\";\nimport React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Imageupload from 'react-images-upload';\n\nconst Compress = require('compress.js');\n\nconst compress = new Compress();\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        uploader: !this.state.uploader\n      });\n      this.props.uploadRefresh();\n    };\n\n    this.onDrop = event => {\n      console.log(\"image getting\", event[0]);\n      var fetchData = new FileReader();\n      fetchData.readAsDataURL(event[0]);\n\n      fetchData.onload = async event => {\n        const url = event.target.result;\n        this.resizingImage(event[0]); //    await this.setState({\n        //         fetchImg: url \n        //     })\n      };\n    };\n\n    this.resizingImage = imgUrl => {};\n\n    this.state = {\n      uploader: this.props.props,\n      fetchImg: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.uploader,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ImagePicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Imageupload, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: event => this.onDrop(event),\n      imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n      maxFileSize: 5242880,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: \"100px\",\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.fetchImg,\n      style: {\n        height: \"100px\",\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"close\")))));\n  }\n\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["/home/kapil/Desktop/Edumetrix/edumetrix/src/Components/ImageUploader.jsx"],"names":["React","Component","Dialog","Imageupload","Compress","require","compress","ImageUploader","constructor","props","handleClose","setState","uploader","state","uploadRefresh","onDrop","event","console","log","fetchData","FileReader","readAsDataURL","onload","url","target","result","resizingImage","imgUrl","fetchImg","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,EAAjB;;AAEA,MAAMG,aAAN,SAA4BN,SAA5B,CAAsC;AAElCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,WAVmB,GAUL,MAAM;AAEhB,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADZ,OAAd;AAGA,WAAKH,KAAL,CAAWK,aAAX;AACH,KAhBkB;;AAAA,SAkBnBC,MAlBmB,GAkBTC,KAAD,IAAW;AAEhBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BF,KAAK,CAAC,CAAD,CAAjC;AACA,UAAIG,SAAS,GAAG,IAAIC,UAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,aAAV,CAAwBL,KAAK,CAAC,CAAD,CAA7B;;AAEAG,MAAAA,SAAS,CAACG,MAAV,GAAmB,MAAON,KAAP,IAAiB;AAChC,cAAMO,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAaC,MAAzB;AAEA,aAAKC,aAAL,CAAmBV,KAAK,CAAC,CAAD,CAAxB,EAHgC,CAKhC;AACA;AACA;AACH,OARD;AAWH,KAnCkB;;AAAA,SAqCnBU,aArCmB,GAqCFC,MAAD,IAAY,CAM3B,CA3CkB;;AAGf,SAAKd,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWA,KADZ;AAGTmB,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAKH;;AAqCDC,EAAAA,MAAM,GAAG;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWD,QAAzB;AAAmC,MAAA,OAAO,EAAE,KAAKF,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,UAAU,EAAC,eAFf;AAGI,MAAA,QAAQ,EAAEM,KAAK,IAAI,KAAKD,MAAL,CAAYC,KAAZ,CAHvB;AAII,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,OAAjC,CAJlB;AAKI,MAAA,WAAW,EAAE,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,KAAK,EAAE;AAAEc,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWe,QAArB;AAA+B,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAMI;AAAQ,MAAA,OAAO,EAAE,KAAKrB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CATJ,CAFJ,CADJ,CADJ;AA4BH;;AA9EiC;;AAgFtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport Imageupload from 'react-images-upload'\nconst Compress = require('compress.js')\nconst compress = new Compress()\n\nclass ImageUploader extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            uploader: this.props.props,\n\n            fetchImg: \"\"\n        }\n    }\n\n    handleClose = () => {\n\n        this.setState({\n            uploader: !this.state.uploader\n        })\n        this.props.uploadRefresh()\n    }\n\n    onDrop = (event) => {\n\n        console.log(\"image getting\",event[0]);\n        var fetchData = new FileReader()\n        fetchData.readAsDataURL(event[0])\n\n        fetchData.onload = async (event) => {\n            const url = event.target.result\n\n            this.resizingImage(event[0])\n\n            //    await this.setState({\n            //         fetchImg: url \n            //     })\n        }\n\n\n    }\n\n    resizingImage = (imgUrl) => {\n\n       \n        \n        \n\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <Dialog open={this.state.uploader} onClose={this.handleClose}>\n\n                    <div className=\"ImagePicker\">\n\n                        <Imageupload\n                            withIcon={true}\n                            buttonText='Choose images'\n                            onChange={event => this.onDrop(event)}\n                            imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                            maxFileSize={5242880}\n                        />\n                        <div>\n\n                            <div style={{ height: \"100px\", width: \"100px\" }}>\n\n                                <img src={this.state.fetchImg} style={{ height: \"100px\", width: \"100px\" }} />\n                            </div>\n                            <button onClick={this.handleClose}>\n                                close\n                            </button>\n                        </div>\n                    </div>\n\n                </Dialog>\n            </div>\n        )\n    }\n}\nexport default ImageUploader"]},"metadata":{},"sourceType":"module"}