{"ast":null,"code":"var _jsxFileName = \"/home/kapil/Desktop/Edumetrix/edumetrix/src/Components/ImageUploader.jsx\";\nimport React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Imageupload from 'react-images-upload';\nimport { throwStatement } from '@babel/types';\nimport { width } from '@material-ui/system';\nvar fetchData = new FileReader();\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        uploader: !this.state.uploader\n      });\n      this.props.uploadRefresh();\n    };\n\n    this.onDrop = event => {\n      fetchData.readAsDataURL(event[0]);\n\n      fetchData.onload = event => {\n        const url = event.target.result;\n        this.setState({\n          fetchImg: url\n        });\n      };\n    };\n\n    this.state = {\n      uploader: this.props.props,\n      fetchImg: \"\"\n    };\n  }\n\n  render() {\n    console.log(\"image part\", this.state.fetchImg);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.uploader,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ImagePicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Imageupload, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: event => this.onDrop(event),\n      imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n      maxFileSize: 5242880,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: \"100px\",\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.fetchImg,\n      style: {\n        height: \"100px\",\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"close\")))));\n  }\n\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["/home/kapil/Desktop/Edumetrix/edumetrix/src/Components/ImageUploader.jsx"],"names":["React","Component","Dialog","Imageupload","throwStatement","width","fetchData","FileReader","ImageUploader","constructor","props","handleClose","setState","uploader","state","uploadRefresh","onDrop","event","readAsDataURL","onload","url","target","result","fetchImg","render","console","log","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,IAAIC,SAAS,GAAG,IAAIC,UAAJ,EAAhB;;AAEA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAElCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,WAVmB,GAUL,MAAM;AAEhB,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADZ,OAAd;AAGA,WAAKH,KAAL,CAAWK,aAAX;AACH,KAhBkB;;AAAA,SAkBnBC,MAlBmB,GAkBTC,KAAD,IAAW;AAGjBX,MAAAA,SAAS,CAACY,aAAV,CAAwBD,KAAK,CAAC,CAAD,CAA7B;;AAEAX,MAAAA,SAAS,CAACa,MAAV,GAAoBF,KAAD,IAAW;AAC7B,cAAMG,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAaC,MAAzB;AAEA,aAAKV,QAAL,CAAc;AAEVW,UAAAA,QAAQ,EAAEH;AAFA,SAAd;AAKH,OARE;AASF,KAhCkB;;AAGf,SAAKN,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWA,KADZ;AAGTa,MAAAA,QAAQ,EAAC;AAHA,KAAb;AAKH;;AA0BDC,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKZ,KAAL,CAAWS,QAApC;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWD,QAAzB;AAAmC,MAAA,OAAO,EAAE,KAAKF,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,UAAU,EAAC,eAFf;AAGI,MAAA,QAAQ,EAAEM,KAAK,IAAI,KAAKD,MAAL,CAAYC,KAAZ,CAHvB;AAII,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,OAAjC,CAJlB;AAKI,MAAA,WAAW,EAAE,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,KAAK,EAAI;AAACU,QAAAA,MAAM,EAAC,OAAR;AAAgBtB,QAAAA,KAAK,EAAC;AAAtB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,GAAG,EAAI,KAAKS,KAAL,CAAWS,QAAvB;AAAiC,MAAA,KAAK,EAAI;AAACI,QAAAA,MAAM,EAAC,OAAR;AAAgBtB,QAAAA,KAAK,EAAC;AAAtB,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAFJ,EAMI;AAAQ,MAAA,OAAO,EAAE,KAAKM,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CATJ,CAFJ,CADJ,CADJ;AA4BH;;AApEiC;;AAsEtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport Imageupload from 'react-images-upload'\nimport { throwStatement } from '@babel/types';\nimport { width } from '@material-ui/system';\n\nvar fetchData = new FileReader()\n\nclass ImageUploader extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            uploader: this.props.props,\n           \n            fetchImg:\"\"\n        }\n    }\n\n    handleClose = () => {\n\n        this.setState({\n            uploader: !this.state.uploader\n        })\n        this.props.uploadRefresh()\n    }\n  \n    onDrop = (event) => {\n\n       \n       fetchData.readAsDataURL(event[0])\n\n       fetchData.onload = (event) => {\n        const url = event.target.result\n\n        this.setState({\n\n            fetchImg: url,\n           \n        })\n    }\n    }\n\n    render() {\n\n        console.log(\"image part\",this.state.fetchImg);\n        \n        return (\n            <div>\n                <Dialog open={this.state.uploader} onClose={this.handleClose}>\n                   \n                    <div className=\"ImagePicker\">\n                      \n                        <Imageupload\n                            withIcon={true}\n                            buttonText='Choose images'\n                            onChange={event => this.onDrop(event)}\n                            imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                            maxFileSize={5242880}\n                        />\n                        <div>\n\n                            <div style = {{height:\"100px\",width:\"100px\"}}>\n\n                            <img src = {this.state.fetchImg} style = {{height:\"100px\",width:\"100px\"}}/>\n                            </div>\n                            <button onClick={this.handleClose}>\n                                close\n                            </button>\n                        </div>\n                    </div>\n\n                </Dialog>\n            </div>\n        )\n    }\n}\nexport default ImageUploader"]},"metadata":{},"sourceType":"module"}