{"ast":null,"code":"var _jsxFileName = \"/home/kapil/Desktop/Edumetrix/edumetrix/src/Components/ImageUploader.jsx\";\nimport React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Imageupload from 'react-images-upload';\nimport Resizer from 'react-image-file-resizer';\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose = () => {\n      this.setState({\n        uploader: !this.state.uploader\n      });\n      this.props.uploadRefresh();\n    };\n\n    this.onDrop = event => {\n      const file = event[0];\n      this.resizingImage(file);\n    };\n\n    this.resizingImage = data => {\n      Resizer.imageFileResizer(data, 500, 500, 'JPEG', 50, 0, uri => {\n        this.setState({\n          fetchImg: uri\n        });\n      }, 'base64');\n    };\n\n    this.state = {\n      uploader: this.props.props,\n      fetchImg: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.uploader,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ImagePicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Imageupload, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: event => this.onDrop(event),\n      imgExtension: ['.jpg', '.gif', '.png', '.gif', '.jpeg'],\n      maxFileSize: 52421000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: \"100px\",\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.fetchImg,\n      style: {\n        height: \"100px\",\n        width: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"close\")))));\n  }\n\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["/home/kapil/Desktop/Edumetrix/edumetrix/src/Components/ImageUploader.jsx"],"names":["React","Component","Dialog","Imageupload","Resizer","ImageUploader","constructor","props","handleClose","setState","uploader","state","uploadRefresh","onDrop","event","file","resizingImage","data","imageFileResizer","uri","fetchImg","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAElCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,WATmB,GASL,MAAM;AAEhB,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADZ,OAAd;AAGA,WAAKH,KAAL,CAAWK,aAAX;AACH,KAfkB;;AAAA,SAiBnBC,MAjBmB,GAiBTC,KAAD,IAAW;AAEjB,YAAMC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAlB;AACA,WAAKE,aAAL,CAAmBD,IAAnB;AAEF,KAtBkB;;AAAA,SA6BnBC,aA7BmB,GA6BFC,IAAD,IAAU;AAEtBb,MAAAA,OAAO,CAACc,gBAAR,CACID,IADJ,EAEI,GAFJ,EAGI,GAHJ,EAII,MAJJ,EAKI,EALJ,EAMI,CANJ,EAOIE,GAAG,IAAI;AAEE,aAAKV,QAAL,CAAc;AACfW,UAAAA,QAAQ,EAAED;AADK,SAAd;AAGR,OAZL,EAaI,QAbJ;AAiBH,KAhDkB;;AAGf,SAAKR,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWA,KADZ;AAETa,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AA4CDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWD,QAAzB;AAAmC,MAAA,OAAO,EAAE,KAAKF,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,UAAU,EAAC,eAFf;AAGI,MAAA,QAAQ,EAAEM,KAAK,IAAI,KAAKD,MAAL,CAAYC,KAAZ,CAHvB;AAII,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,OAAjC,CAJlB;AAKI,MAAA,WAAW,EAAE,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWS,QAArB;AAA+B,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAMI;AAAQ,MAAA,OAAO,EAAE,KAAKf,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CATJ,CAFJ,CADJ,CADJ;AA4BH;;AAnFiC;;AAqFtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport Imageupload from 'react-images-upload'\nimport Resizer from 'react-image-file-resizer';\n\nclass ImageUploader extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            uploader: this.props.props,\n            fetchImg: \"\"\n        }\n    }\n\n    handleClose = () => {\n\n        this.setState({\n            uploader: !this.state.uploader\n        })\n        this.props.uploadRefresh()\n    }\n\n    onDrop = (event) => {\n\n       const file = event[0]\n       this.resizingImage(file)\n\n    }\n\n    /**\n     * \n     *  this resize function defined for resizing image file size into below 100KB .\n     *  after resizing pic converting into url\n     */\n    resizingImage = (data) => {\n       \n        Resizer.imageFileResizer(\n            data,\n            500, \n            500,\n            'JPEG', \n            50, \n            0,\n            uri => {\n                    \n                     this.setState({\n                    fetchImg: uri \n        })\n            },\n            'base64'\n        );\n\n\n    }\n        \n\n    render() {\n\n        return (\n            <div>\n                <Dialog open={this.state.uploader} onClose={this.handleClose}>\n\n                    <div className=\"ImagePicker\">\n\n                        <Imageupload\n                            withIcon={true}\n                            buttonText='Choose images'\n                            onChange={event => this.onDrop(event)}\n                            imgExtension={['.jpg', '.gif', '.png', '.gif', '.jpeg']}\n                            maxFileSize={52421000}\n                        />\n                        <div>\n\n                            <div style={{ height: \"100px\", width: \"100px\" }}>\n\n                                <img src={this.state.fetchImg} style={{ height: \"100px\", width: \"100px\" }} />\n                            </div>\n                            <button onClick={this.handleClose}>\n                                close\n                            </button>\n                        </div>\n                    </div>\n\n                </Dialog>\n            </div>\n        )\n    }\n}\nexport default ImageUploader"]},"metadata":{},"sourceType":"module"}